{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/angelinasanna/my-sorority-bot/app/api/admin/chunks/route.js"],"sourcesContent":["import { auth, currentUser } from \"@clerk/nextjs/server\";\nimport { createClient } from \"@supabase/supabase-js\";\n\nfunction isEmailAdmin(email) {\n  const list = (process.env.ADMIN_EMAILS || process.env.NEXT_PUBLIC_ADMIN_EMAILS || \"\")\n    .split(\",\").map(s => s.trim().toLowerCase()).filter(Boolean);\n  return list.includes((email || \"\").toLowerCase());\n}\nasync function requireAdmin() {\n  const { userId } = await auth();\n  if (!userId) throw new Response(\"Unauthorized\", { status: 401 });\n  const user = await currentUser();\n  const email = user?.primaryEmailAddress?.emailAddress;\n  const role = user?.publicMetadata?.role;\n  if (!(role === \"admin\" || isEmailAdmin(email))) throw new Response(\"Forbidden\", { status: 403 });\n}\nfunction supa() {\n  return createClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL,\n    process.env.SUPABASE_SERVICE_ROLE,\n    { auth: { persistSession: false } }\n  );\n}\n\n/** GET: list with search + pagination */\nexport async function GET(req) {\n  try {\n    await requireAdmin();\n    const { searchParams } = new URL(req.url);\n    const q = (searchParams.get(\"q\") || \"\").trim();\n    const limit = Math.min(parseInt(searchParams.get(\"limit\") || \"20\", 10), 100);\n    const offset = Math.max(parseInt(searchParams.get(\"offset\") || \"0\", 10), 0);\n\n    let query = supa()\n      .from(\"chunks\")\n      .select(\"id, content, source, url, created_at, updated_at\", { count: \"exact\" })\n      .order(\"created_at\", { ascending: false })\n      .range(offset, offset + limit - 1);\n\n    if (q) query = query.or(`content.ilike.%${q}%,source.ilike.%${q}%`);\n\n    const { data, count, error } = await query;\n    if (error) return Response.json({ error: error.message }, { status: 500 });\n    return Response.json({ items: data || [], total: count || 0 });\n  } catch (e) {\n    if (e instanceof Response) return e;\n    return Response.json({ error: e.message }, { status: 500 });\n  }\n}\n\n/** POST: create with default source + Voyage embedding */\nexport async function POST(req) {\n  try {\n    await requireAdmin();\n    const { content, url = null } = await req.json(); // <— no source from client\n    if (!content?.trim()) return Response.json({ error: \"No content\" }, { status: 400 });\n\n    // embed with Voyage\n    const model = process.env.EMBED_MODEL || \"voyage-3.5-lite\";\n    const vRes = await fetch(\"https://api.voyageai.com/v1/embeddings\", {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${process.env.VOYAGE_API_KEY}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ model, input: content, input_type: \"document\" }),\n    });\n    if (!vRes.ok) return Response.json({ error: await vRes.text() }, { status: vRes.status });\n    const v = await vRes.json();\n    const vector = v?.data?.[0]?.embedding;\n\n    const defaultSource = process.env.DEFAULT_SOURCE || \"General\"; // <— your default label\n    const { data, error } = await supa()\n      .from(\"chunks\")\n      .insert({\n        content,\n        url,\n        source: defaultSource,\n        embedding_voyage: vector,\n        updated_at: new Date().toISOString(),\n      })\n      .select(\"id\")\n      .single();\n\n    if (error) return Response.json({ error: error.message }, { status: 500 });\n    return Response.json({ ok: true, id: data.id });\n  } catch (e) {\n    if (e instanceof Response) return e;\n    return Response.json({ error: e.message }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}